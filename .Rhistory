#
Casos$Robson[Casos$Gestación.Múltiple=="No"  & Casos$Nalgas==0 & Casos$PREMATURO==1 ]=10
#
Casos$Robson[Casos$Gestación.Múltiple=="No" & Casos$Nalgas==0 & Casos$PREMATURO==0 & Casos$NULIPARA==0 &  Casos$CesAnt==1 ]=5
#
Casos$Robson[Casos$Gestación.Múltiple=="No" & Casos$Nalgas==0 & Casos$PREMATURO==0 & Casos$NULIPARA==0 &  Casos$CesAnt==0 & !is.na(Casos$Inicio.de.parto) & Casos$Inicio.de.parto!="Espontáneo" ]=4
#
Casos$Robson[Casos$Gestación.Múltiple=="No" & Casos$Nalgas==0 & Casos$PREMATURO==0 & Casos$NULIPARA==0 &  Casos$CesAnt==0 &  Casos$Inicio.de.parto=="Espontáneo" ]=3
#
Casos$Robson[Casos$Gestación.Múltiple=="No" & Casos$Nalgas==0 & Casos$PREMATURO==0 & Casos$NULIPARA==1 &  !is.na(Casos$Inicio.de.parto) & Casos$Inicio.de.parto!="Espontáneo"]=2
#
Casos$Robson[Casos$Gestación.Múltiple=="No" & Casos$Nalgas==0 & Casos$PREMATURO==0 & Casos$NULIPARA==1 & Casos$Inicio.de.parto=="Espontáneo" ]=1
#
Casos$Robson=factor(Casos$Robson,levels=0:10) # 0 son los casos perdidos
Controls$Robson=rep(0,n_NI)
#
Controls$Robson[Controls$Gestación.Múltiple==1]=8
#
Controls$Robson[Controls$Gestación.Múltiple==0& Controls$Nalgas==2]=9
#
Controls$Robson[Controls$Gestación.Múltiple==0  & Controls$Nalgas==1 & Controls$Nuliparous==0 ]=7
#
Controls$Robson[Controls$Gestación.Múltiple==0  & Controls$Nalgas==1 & Controls$Nuliparous==1 ]=6
#
Controls$Robson[Controls$Gestación.Múltiple==0  & Controls$Nalgas==0 & Controls$Preterm.deliveries==1 ]=10
#
Controls$Robson[Controls$Gestación.Múltiple==0 & Controls$Nalgas==0 & Controls$Preterm.deliveries==0 & Controls$Nuliparous==0 &  Controls$CesAnt==1 ]=5
#
Controls$Robson[Controls$Gestación.Múltiple==0 & Controls$Nalgas==0 & Controls$Preterm.deliveries==0 & Controls$Nuliparous==0 &  Controls$CesAnt==0 & !is.na(Controls$Inicio.de.parto) & Controls$Inicio.de.parto!="Espontáneo" ]=4
#
Controls$Robson[Controls$Gestación.Múltiple==0 & Controls$Nalgas==0 & Controls$Preterm.deliveries==0 & Controls$Nuliparous==0 &  Controls$CesAnt==0 &  Controls$Inicio.de.parto=="Espontáneo" ]=3
#
Controls$Robson[Controls$Gestación.Múltiple==0 & Controls$Nalgas==0 & Controls$Preterm.deliveries==0 & Controls$Nuliparous==1 &  !is.na(Controls$Inicio.de.parto) & Controls$Inicio.de.parto!="Espontáneo"]=2
#
Controls$Robson[Controls$Gestación.Múltiple==0 & Controls$Nalgas==0 & Controls$Preterm.deliveries==0 & Controls$Nuliparous==1 & Controls$Inicio.de.parto=="Espontáneo" ]=1
#
Controls$Robson=factor(Controls$Robson,levels=0:10)  # 0 son los casos perdidos
Casos1w$Cesárea=Casos[Casos$PRIMERA_OLA...3==1,]$Cesárea
Controls1w$Cesárea=Controls[Controls$PRIMERA_OLA...4==1,]$Cesárea
Casos2w$Cesárea=Casos[Casos$SEGUNDA_OLA...4==1,]$Cesárea
Controls2w$Cesárea=Controls[Controls$SEGUNDA_OLA...5==1,]$Cesárea
Casos1w$Robson=Casos[Casos$PRIMERA_OLA...3==1,]$Robson
Controls1w$Robson=Controls[Controls$PRIMERA_OLA...4==1,]$Robson
Casos2w$Robson=Casos[Casos$SEGUNDA_OLA...4==1,]$Robson
Controls2w$Robson=Controls[Controls$SEGUNDA_OLA...5==1,]$Robson
#Test para diferencias de RA
RA.RA=function(M,conf.level=0.95){
beta=c(1,-1,-1,1)
B=sum(beta)
e=M[1,]
n=colSums(M)
p=e/n
q=1-2*p
N=sum(n)
L.b=sum(beta*p)
T=L.b+n[2]+n[3]
T0=4*L.b^2/sum(beta^2/n)
if (L.b>0){T1=T*L.b/2}
if (L.b<0){T1=(N-T)*L.b/(-2)}
if (L.b==0){T1=0}
y=function(x){N-sum(sqrt(n^2+((2*n*beta*q)/L.b)*x+(beta^2/L.b^2)*x^2))}
z2=rootSolve::multiroot(y,start=(T0+T1)/2,maxiter=1000,rtol = 1e-8, atol = 1e-10, ctol = 1e-10)$root
p.val=1-pchisq(z2,1)
zz=qnorm((1-conf.level)/2)^2
y=function(x){N+2*zz -2*L.b*x-sum(sqrt(n^2+2*n*beta*q*x+x^2))}
C1=rootSolve::multiroot(y,start=-100,maxiter=1000,rtol = 1e-8, atol = 1e-10, ctol = 1e-10)$root
C2=rootSolve::multiroot(y,start=100,maxiter=1000,rtol = 1e-8, atol = 1e-10, ctol = 1e-10)$root
IC=L.b-zz/c(C2,C1)
Res=rbind(c(p.val,IC))
colnames(Res)=c("p-valor","IC-inferior","IC-superior")
return(Res)
}
#Test para cociente de RR
RR.RR=function(M,conf.level=0.95){
e=M[1,]
n=colSums(M)
p=e/n
RR1=p[1]/p[2]
RR2=p[3]/p[4]
se.lnRR1=sqrt(1/e[1]+1/e[2]-1/n[1]-1/n[2])
se.lnRR2=sqrt(1/e[3]+1/e[4]-1/n[3]-1/n[4])
RRR=RR1/RR2
se.lnRRR=sqrt(se.lnRR1^2+se.lnRR2^2)
IC.1=exp(log(RRR)-se.lnRRR*qnorm((1+conf.level)/2))
IC.2=exp(log(RRR)+se.lnRRR*qnorm((1+conf.level)/2))
p.val=2-2*pnorm(abs(log(RRR))/se.lnRRR)
Res=rbind(c(RRR,p.val,IC.1,IC.2))
colnames(Res)=c("RRR", "p-valor","IC-inferior","IC-superior")
return(Res)
}
# Test para comparar OR
OR.OR=function(M,conf.level=0.95){
M1=M[,1:2]
M2=M[,3:4]
LOR1=log(fisher.test(M1)$estimate)
LOR2=log(fisher.test(M2)$estimate)
Z=abs(LOR1-LOR2)/sqrt(sum(1/M))
p.val=2*(1-pnorm(Z))
IC=exp(LOR1-LOR2+qnorm((1+conf.level)/2)*sqrt(sum(1/M))*c(-1,1))
Res=rbind(c(p.val,IC))
colnames(Res)=c("p-valor","IC-inferior","IC-superior")
return(Res)
}
# Test de tendencia
Prop.trend.test=function(x,X){
chisq.test(rbind(x,X))$p.value
}
#Tabla de RA y RR
Riesgos=function(M){
e=M[1,]
n=colSums(M)
p=e/n
RA=round(c(p[1]-p[2],p[3]-p[4]),4)
RR=round(c(p[1]/p[2],p[3]/p[4]),4)
Res=cbind(RA,RR)
rownames(Res)=c("1a ola", "2a ola")
return(Res)
}
# Tablas 2d Descripción casos-controles
Tabla.DMG=function(I,NI,L1,L2){
NA_I=length(I[is.na(I)])
NA_NI=length(NI[is.na(NI)])
EEExt=rbind(c(as.vector(table(I)),NA_I),
round(100*c(as.vector(table(I)),NA_I)/n_I,1),
c(as.vector(table(NI)),NA_NI),
round(100*c(as.vector(table(NI)),NA_NI)/n_NI,1))
colnames(EEExt)=c(L1, L2,"Pérdidas")
rownames(EEExt)=c("Infectadas (N)", "Infectadas (%)","No infectadas (N)", "No infectadas (%)")
t(EEExt) %>%
kbl() %>%
kable_styling() %>%
scroll_box(width="100%", box_css="border: 0px;")
}
Tabla.DMG1=function(I,NI,L1,L2){
NA_I=length(I[is.na(I)])
NA_NI=length(NI[is.na(NI)])
EEExt=rbind(c(as.vector(table(I))[2:1],NA_I),
round(100*c(as.vector(table(I))[2:1],NA_I)/n_I1,1),
c(as.vector(table(NI))[2:1],NA_NI),
round(100*c(as.vector(table(NI))[2:1],NA_NI)/n_NI1,1))
colnames(EEExt)=c(L1, L2,"Pérdidas")
rownames(EEExt)=c("Infectadas (N)", "Infectadas (%)","No infectadas (N)", "No infectadas (%)")
t(EEExt) %>%
kbl() %>%
kable_styling() %>%
scroll_box(width="100%", box_css="border: 0px;")
}
Tabla.DMG2=function(I,NI,L1,L2){
NA_I=length(I[is.na(I)])
NA_NI=length(NI[is.na(NI)])
EEExt=rbind(c(as.vector(table(I))[2:1],NA_I),
round(100*c(as.vector(table(I))[2:1],NA_I)/n_I2,1),
c(as.vector(table(NI))[2:1],NA_NI),
round(100*c(as.vector(table(NI))[2:1],NA_NI)/n_NI2,1))
colnames(EEExt)=c(L1, L2,"Pérdidas")
rownames(EEExt)=c("Infectadas (N)", "Infectadas (%)","No infectadas (N)", "No infectadas (%)")
t(EEExt) %>%
kbl() %>%
kable_styling() %>%
scroll_box(width="100%", box_css="border: 0px;")
}
# Tablas 2d Descripción sintomatología
Tabla.DGS=function(I,L1,L2){
DF=data.frame(Factor=I,Síntomas=Sint)
taula=table(DF)[c(2,1) ,1:3]
proptaula=round(100*prop.table(taula,margin=2),2)
EEExt=cbind(c(as.vector(taula[,1]),n_AS-sum(as.vector(taula[,1]))),
round(100*c(as.vector(taula[,1]),n_AS-sum(as.vector(taula[,1])))/n_AS,2),
c(as.vector(taula[,2]),n_SL-sum(as.vector(taula[,2]))),
round(100*c(as.vector(taula[,2]),n_SL-sum(as.vector(taula[,2])))/n_SL,2),
c(as.vector(taula[,3]),n_NE-sum(as.vector(taula[,3]))),
round(100*c(as.vector(taula[,3]),n_NE-sum(as.vector(taula[,3])))/n_NE,2)
)
EEExt=rbind(EEExt,c(n_AS,100,n_SL,100,n_NE,100))
rownames(EEExt)=c(L1,L2,"Pérdidas","Total")
colnames(EEExt)=Columnes.Sint
EEExt %>%
kbl() %>%
kable_styling() %>%
scroll_box(width="100%", box_css="border: 0px;")
}
Tabla.DGSW=function(I,L1,L2){
DF=data.frame(Factor=I,Síntomas=Sint)
taula=table(DF)[c(2,1) ,]
proptaula=round(100*prop.table(taula,margin=2),2)
EEExt=cbind(as.vector(taula[,1]),
as.vector(proptaula[,1]),
as.vector(taula[,2]),
as.vector(proptaula[,2]),
as.vector(taula[,3]),
as.vector(proptaula[,3])
)
rownames(EEExt)=c(L1,L2)
colnames(EEExt)=Columnes.Sint
EEExt %>%
kbl() %>%
kable_styling()
}
# Barplots descripción global sintomatología
Barplot.DGS=function(I,L1,L2){
taula=table(data.frame(Factor=I,Síntomas=Sint))[c(2,1) ,1:3]
Síntomas=ordered(rep(c("Asintomática", "Leve", "Grave"), each=2),levels=c("Asintomática", "Leve", "Grave"))
Grupo=ordered(rep(c(L1, L2) , 3),levels=c(L1, L2))
valor=as.vector(prop.table(taula, margin=1))
data <- data.frame(Grupo,Síntomas,valor)
ggplot(data, aes(fill=Síntomas, y=valor, x=Grupo)) +
geom_bar(position="dodge", stat="identity")+
ylab("")+
xlab("")+
scale_fill_brewer(palette = "Dark2")
}
Barplot.DGSW=function(I,L1,L2){
taula=table(data.frame(Factor=I,Síntomas=Sint))[c(2,1),]
Síntomas=ordered(rep(c("Asintomática", "Leve", "Grave"), each=2),levels=c("Asintomática", "Leve", "Grave"))
Grupo=ordered(rep(c(L1,L2) , 3),levels=c(L1,L2))
valor=as.vector(prop.table(taula, margin=1))
data <- data.frame(Grupo,Síntomas,valor)
ggplot(data, aes(fill=Síntomas, y=valor, x=Grupo)) +
geom_bar(position="dodge", stat="identity")+
ylab("")+
xlab("")+
scale_fill_brewer(palette = "Dark2")
}
# Tabla de comparación entre olas: Casos y controles
ComparOlasCC=function(I1,I2,NI1,NI2,L1,L2){
NA_I1=length(I1[is.na(I1)])
NA_NI1=length(NI1[is.na(NI1)])
NA_I2=length(I2[is.na(I2)])
NA_NI2=length(NI2[is.na(NI2)])
EEExt=cbind(c(as.vector(table(I1))[2:1],NA_I1),
round(100*c(as.vector(table(I1))[2:1],NA_I1)/n_I1,1),
c(as.vector(table(NI1))[2:1],NA_NI1),
round(100*c(as.vector(table(NI1))[2:1],NA_NI1)/n_NI1,1),
c(as.vector(table(I2))[2:1],NA_I2),
round(100*c(as.vector(table(I2))[2:1],NA_I2)/n_I2,1),
c(as.vector(table(NI2))[2:1],NA_NI2),
round(100*c(as.vector(table(NI2))[2:1],NA_NI2)/n_NI2,1)
)
colnames(EEExt)=ColumnesExt
rownames(EEExt)=c(L1, L2,"Pérdidas")
EEExt %>%
kbl() %>%
kable_styling() %>%
scroll_box(width="100%", box_css="border: 0px;")
}
GrComparOlasCC=function(I1,I2,NI1,NI2,L1){
base=c("1a ola","2a ola")
df=data.frame(
Factor=c(rep("Infectadas 1a ola",length(I1)), rep("No infectadas 1a ola",length(NI1)),rep("Infectadas 2a ola",length(I2)), rep("No infectadas 2a ola",length(NI2))),
Grupo=c(I1,NI1,I2,NI2 )
)
Grupo=ordered(rep(c("Infectadas","No infectadas"), 2),levels=c("Infectadas","No infectadas"))
Ola=ordered(rep(base , each=2),levels=base)
valor=as.vector(100*prop.table(table(df)[c(1,3,2,4),2:1], margin=1))[1:4]
data=data.frame(Grupo,Ola,valor)
data %>%
ggplot(aes(fill=Grupo, y=valor, x=Ola)) +
geom_bar(position="dodge", stat="identity")+
xlab("")+
ylab(paste(L1,"(%)"))+
scale_fill_hue(c=100)+labs(fill="")}
# Tabla de comparación entre olas: Global
ComparOlasGl=function(Tot1w,Tot2w,L1,L2){
n_1=length(Tot1w)
n_2=length(Tot2w)
NA_1=length(Tot1w[is.na(Tot1w)])
NA_2=length(Tot2w[is.na(Tot2w)])
EEExt=cbind(c(as.vector(table(Tot1w))[2:1],NA_1),
round(100*c(as.vector(table(Tot1w))[2:1],NA_1)/n_1,1),
c(as.vector(table(Tot2w))[2:1],NA_2),
round(100*c(as.vector(table(Tot2w))[2:1],NA_2)/n_2,1)
)
colnames(EEExt)=ColumnesOnes
rownames(EEExt)=c(L1,L2,"Pérdidas")
EEExt %>%
kbl() %>%
kable_styling() %>%
scroll_box(width="100%", box_css="border: 0px;")
}
# Tabla de comparación Anteparto-Periparto
TablaAntePeri=function(I,NI,L1,L2){
I.AP=I[Casos$PreP==1]
I.PP=I[Casos$PreP==0]
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
NA_NI=length(NI[is.na(NI)])
EEExt=rbind(c(as.vector(table(I.AP))[2:1],NA_IAP),
round(100*c(as.vector(table(I.AP))[2:1],NA_IAP)/n_IAP,1),
c(as.vector(table(I.PP))[2:1],NA_IPP),
round(100*c(as.vector(table(I.PP))[2:1],NA_IPP)/n_IPP,1),
c(as.vector(table(NI))[2:1],NA_NI),
round(100*c(as.vector(table(NI))[2:1],NA_NI)/n_NI,1))
rownames(EEExt)=ColumnesP
colnames(EEExt)=c(L1,L2,"Pérdidas")
t(EEExt) %>%
kbl() %>%
kable_styling()
}
# Tablas 2d Robson
TablaRobsonGlobal=function(TR1,TR2,x,y=x){
EE1=t(TR1)[2:1,2:11]
EE2=t(TR2)[2:1,2:11]
OR=rep(0,10)
pp=rep(0,10)
for (i in 1:10){
FT=fisher.test(cbind(EE1[,i],EE2[,i]))
OR[i]=FT$estimate
pp[i]=FT$p.value       }
dt=data.frame(1:10,colSums(EE1),EE1[1,],round(100*prop.table(EE1,margin=2)[1,],2),colSums(EE2),EE2[1,],round(100*prop.table(EE2,margin=2)[1,],2),round(OR,2),round(pp,3))
names(dt)=c("Grupo Robson", paste("Casos",x), "Cesáreas", "Porcentaje",  paste("Controles",y), "Cesáreas", "Porcentaje","OR","p-valor test de Fisher")
dt %>%
kbl() %>%
kable_styling()%>%
scroll_box(width="100%", box_css="border: 0px;")}
Casos$Dif=round((Casos$EG_TOTAL_PARTO-Casos$EDAD.GEST.TOTAL)*7)
Casos$PreP=rep(NA,n_I)
Casos$PreP[Casos$Dif>2]=1  #Diagnóstico de covid anteparto
Casos$PreP[Casos$Dif<=2]=0
n_IAP=table(Casos$PreP)[2]
n_IPP=table(Casos$PreP)[1]
ColumnesP=c("Infectadas anteparto (N)", "Infectadas anteparto (%)","Infectadas periparto (N)", "Infectadas periparto (%)","No infectadas (N)", "No infectadas (%)")
CasosGM$Dif=round((CasosGM$EG_TOTAL_PARTO-CasosGM$EDAD.GEST.TOTAL)*7)
CasosGM$PreP=rep(NA,dim(CasosGM)[1])
CasosGM$PreP[CasosGM$Dif>2]=1  #Diagnóstico de covid anteparto
CasosGM$PreP[CasosGM$Dif<=2]=0
I.AP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==1]
I.PP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==0]
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
#table(I.AP)
#table(I.PP)
EEExt=rbind(c(table(I.AP)[1],round(100*prop.table(table(I.AP)),2)[1],
table(I.AP)[3],round(100*prop.table(table(I.AP)),2)[3],
table(I.AP)[2],round(100*prop.table(table(I.AP)),2)[2],
length(I.AP)),
c(table(I.PP)[1],round(100*prop.table(table(I.PP)),2)[1],
table(I.PP)[3],round(100*prop.table(table(I.PP)),2)[3],
table(I.PP)[2],round(100*prop.table(table(I.PP)),2)[2],
length(I.PP))
)
EEE=EEExt[,c(1,3,5)]
colnames(EEE)=c("Asintomáticas", "Síntomas leves", "Neumonía")
colnames(EEExt)= c("Asintomáticas (N)", "Asintomáticas (%)","Síntomas leves (N)", "Síntomas leves (%)", "Neumonía (N)", "Neumonía (%)","Total")
rownames(EEExt)=c("Infectadas anteparto", "Infectadas periparto")
EEExt %>%
kbl() %>%
kable_styling()
Síntomas=ordered(rep(c("Asintomática", "Síntomas leves", "Neumonía"), each=2),levels=c("Asintomática", "Síntomas leves", "Neumonía"))
Grupo=rep(c("Anteparto","Periparto") , 3)
valor1=as.vector(prop.table(EEE, margin=1))
data1 <- data.frame(Grupo,Síntomas,valor1)
valor2=as.vector(prop.table(EEE, margin=2))
data2 <- data.frame(Grupo,Síntomas,valor2)
ggplot(data1, aes(fill=Síntomas, y=valor1, x=Grupo)) +
geom_bar(position="dodge", stat="identity")+
xlab("Momento de diagnóstico")+
ylab("")+
scale_fill_brewer(palette = "Dark2")
ggplot(data2, aes(fill=Grupo, y=valor2, x=Síntomas)) +
geom_bar(position="dodge", stat="identity")+
xlab("Síntomas")+
ylab("")+
labs(fill = "Momento diag.")
table(I.AP)
I.AP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==1]
I.PP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==0]
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
#table(I.AP)
#table(I.PP)
EEExt=rbind(c(table(I.AP)[1],round(100*prop.table(table(I.AP)),2)[1],
table(I.AP)[2],round(100*prop.table(table(I.AP)),2)[3],
table(I.AP)[3],round(100*prop.table(table(I.AP)),2)[2],
length(I.AP)),
c(table(I.PP)[1],round(100*prop.table(table(I.PP)),2)[1],
table(I.PP)[2],round(100*prop.table(table(I.PP)),2)[3],
table(I.PP)[3],round(100*prop.table(table(I.PP)),2)[2],
length(I.PP))
)
EEE=EEExt[,c(1,3,5)]
colnames(EEE)=c("Asintomáticas", "Síntomas leves", "Neumonía")
colnames(EEExt)= c("Asintomáticas (N)", "Asintomáticas (%)","Síntomas leves (N)", "Síntomas leves (%)", "Neumonía (N)", "Neumonía (%)","Total")
rownames(EEExt)=c("Infectadas anteparto", "Infectadas periparto")
EEExt %>%
kbl() %>%
kable_styling()
I.AP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==1]
I.PP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==0]
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
#table(I.AP)
#table(I.PP)
EEExt=rbind(c(table(I.AP)[1],round(100*prop.table(table(I.AP)),2)[1],
table(I.AP)[2],round(100*prop.table(table(I.AP)),2)[2],
table(I.AP)[3],round(100*prop.table(table(I.AP)),2)[3],
length(I.AP)),
c(table(I.PP)[1],round(100*prop.table(table(I.PP)),2)[1],
table(I.PP)[2],round(100*prop.table(table(I.PP)),2)[2],
table(I.PP)[3],round(100*prop.table(table(I.PP)),2)[3],
length(I.PP))
)
EEE=EEExt[,c(1,3,5)]
colnames(EEE)=c("Asintomáticas", "Síntomas leves", "Neumonía")
colnames(EEExt)= c("Asintomáticas (N)", "Asintomáticas (%)","Síntomas leves (N)", "Síntomas leves (%)", "Neumonía (N)", "Neumonía (%)","Total")
rownames(EEExt)=c("Infectadas anteparto", "Infectadas periparto")
EEExt %>%
kbl() %>%
kable_styling()
I.AP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==1]
I.PP=Casos$SINTOMAS_DIAGNOSTICO[Casos$PreP==0]
TT=table(Casos$PreP,Casos$SINTOMAS_DIAGNOSTICO)
p.TT=round(100*prop.table(TT,margin=2)[2:1,],1)
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
#table(I.AP)
#table(I.PP)
EEExt=rbind(c(TT[2,1],p.TT[1,1],
TT[2,3],p.TT[1,3],
TT[2,2],p.TT[1,2],
length(I.AP)),
c(TT[1,1],p.TT[2,1],
TT[1,3],p.TT[2,3],
TT[1,2],p.TT[2,2],
length(I.PP))
)
EEE=EEExt[,c(1,3,5)]
colnames(EEE)=c("Asintomáticas", "Síntomas leves", "Neumonía")
colnames(EEExt)= c("Asintomáticas (N)", "Asintomáticas (%)","Síntomas leves (N)", "Síntomas leves (%)", "Neumonía (N)", "Neumonía (%)","Total")
rownames(EEExt)=c("Infectadas anteparto", "Infectadas periparto")
EEExt %>%
kbl() %>%
kable_styling()
valor1=as.vector(prop.table(EEE, margin=1))
valor1
Síntomas=ordered(rep(c("Asintomática", "Leve", "Grave"), each=2),levels=c("Asintomática", "Leve", "Grave"))
Grupo=rep(c("Anteparto","Periparto") , 3)
valor1=as.vector(prop.table(EEE, margin=1))
data1 <- data.frame(Grupo,Síntomas,valor1)
valor2=as.vector(prop.table(EEE, margin=2))
data2 <- data.frame(Grupo,Síntomas,valor2)
ggplot(data1, aes(fill=Síntomas, y=valor1, x=Grupo)) +
geom_bar(position="dodge", stat="identity")+
xlab("Momento de diagnóstico")+
ylab("")+
scale_fill_brewer(palette = "Dark2")
ggplot(data2, aes(fill=Grupo, y=valor2, x=Síntomas)) +
geom_bar(position="dodge", stat="identity")+
xlab("Síntomas")+
ylab("")+
labs(fill = "Momento diag.")
I=Casos$PREECLAMPSIA_ECLAMPSIA_TOTAL
NI=Controls$PREECLAMPSIA
TablaAntePeri(I,NI,"PE", "No PE")
NI1=Controls$DVT
NI2=Controls$PE
NI=rep(NA,n_NI)
for (i in 1:n_NI){NI[i]=max(NI1[i],NI2[i],na.rm=TRUE)}
I=Casos$EVENTOS_TROMBO_TOTALES
TablaAntePeri(I,NI,"Eventos trombóticos","No eventos trombóticos")
NI1=Controls$DVT
NI2=Controls$PE
NI=rep(NA,n_NI)
for (i in 1:n_NI){NI[i]=max(NI1[i],NI2[i],na.rm=TRUE)}
I=Casos$EVENTOS_TROMBO_TOTALES
TablaAntePeri(I,NI,"Eventos trombóticos","No eventos trombóticos")
NI1=Controls$DVT
NI2=Controls$PE
NI=rep(NA,n_NI)
for (i in 1:n_NI){NI[i]=max(NI1[i],NI2[i],na.rm=TRUE)}
table(NI)
I=Casos$EVENTOS_TROMBO_TOTALES
TablaAntePeri(I,NI,"Eventos trombóticos","No eventos trombóticos")
NI1=Controls$DVT
NI2=Controls$PE
NI=rep(NA,n_NI)
for (i in 1:n_NI){NI[i]=max(NI1[i],NI2[i],na.rm=TRUE)}
I=Casos$EVENTOS_TROMBO_TOTALES
I.AP=I[Casos$PreP==1]
I.PP=I[Casos$PreP==0]
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
NA_NI=length(NI[is.na(NI)])
EEExt=rbind(c(as.vector(table(I.AP))[2:1],NA_IAP),
round(100*c(as.vector(table(I.AP))[2:1],NA_IAP)/n_IAP,1),
c(as.vector(table(I.PP))[2:1],NA_IPP),
round(100*c(as.vector(table(I.PP))[2:1],NA_IPP)/n_IPP,1),
c(as.vector(table(NI))[2:1],NA_NI),
round(100*c(as.vector(table(NI))[2:1],NA_NI)/n_NI,1))
rownames(EEExt)=ColumnesP
colnames(EEExt)=c("Eventos trombóticos","No eventos trombóticos","Pérdidas")
t(EEExt) %>%
kbl() %>%
kable_styling()
TablaAntePeri(I,NI,"Eventos trombóticos","No eventos trombóticos")
table(NI)
as.vector(table(NI))[2:1]
I.AP=I[Casos$PreP==1]
I.PP=I[Casos$PreP==0]
NA_IAP=length(I.AP[is.na(I.AP)])
NA_IPP=length(I.PP[is.na(I.PP)])
NA_NI=length(NI[is.na(NI)])
EEExt=rbind(c(as.vector(table(I.AP))[2:1],NA_IAP),
round(100*c(as.vector(table(I.AP))[2:1],NA_IAP)/n_IAP,1),
c(as.vector(table(I.PP))[2:1],NA_IPP),
round(100*c(as.vector(table(I.PP))[2:1],NA_IPP)/n_IPP,1),
c(as.vector(table(NI))[2:1],NA_NI),
round(100*c(as.vector(table(NI))[2:1],NA_NI)/n_NI,1))
rownames(EEExt)=ColumnesP
colnames(EEExt)=c("Eventos trombóticos","No eventos trombóticos","Pérdidas")
t(EEExt) %>%
kbl() %>%
kable_styling()
